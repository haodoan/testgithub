###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.30.1.50036 for STM8             24/Jan/2015  12:33:02 #
# Copyright 2010-2011 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Libraries\STM8S_St #
#                    dPeriph_Driver\src\stm8s_iwdg.c                          #
#    Command line =  D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Libraries\STM8S_St #
#                    dPeriph_Driver\src\stm8s_iwdg.c -e -Ol --no_cse          #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_cross_call --debug --code_model medium              #
#                    --data_model medium -o D:\Project\STM8S_StdPeriph_Lib_V2 #
#                    .1.0\Project\STM8S_StdPeriph_Template\EWSTM8\STM8S208\Ob #
#                    j\ --dlib_config "C:\Program Files\IAR Systems\Embedded  #
#                    Workbench 6.0\stm8\LIB\dlstm8mmn.h" -D                   #
#                    USE_STM8_128_EVAL -D STM8S003 -lC                        #
#                    D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\STM8S208\List\ -lb                 #
#                    D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\STM8S208\List\ -I                  #
#                    D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\..\ -I                             #
#                    D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\..\..\..\Libraries\STM8S_StdPeriph #
#                    _Driver\inc\ -I D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Pr #
#                    oject\STM8S_StdPeriph_Template\EWSTM8\..\..\..\Utilities #
#                    \STM8S_EVAL\ -I D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Pr #
#                    oject\STM8S_StdPeriph_Template\EWSTM8\..\..\..\Utilities #
#                    \STM8S_EVAL\STM8S-128_EVAL\ -I                           #
#                    D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\..\..\..\Utilities\STM8S_EVAL\Comm #
#                    on\ --vregs 16                                           #
#    List file    =  D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\STM8S208\List\stm8s_iwdg.lst       #
#    Object file  =  D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Project\STM8S_StdP #
#                    eriph_Template\EWSTM8\STM8S208\Obj\stm8s_iwdg.o          #
#                                                                             #
#                                                                             #
###############################################################################

D:\Project\STM8S_StdPeriph_Lib_V2.1.0\Libraries\STM8S_StdPeriph_Driver\src\stm8s_iwdg.c
      1          /**
      2            ********************************************************************************
      3            * @file    stm8s_iwdg.c
      4            * @author  MCD Application Team
      5            * @version V2.1.0
      6            * @date    18-November-2011
      7            * @brief   This file contains all the functions for the IWDG peripheral.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     12            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     13            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     14            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     15            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     16            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     17            *
     18            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     19            ******************************************************************************
     20            */
     21          
     22          /* Includes ------------------------------------------------------------------*/
     23          #include "stm8s_iwdg.h"
     24          
     25          /* Private define ------------------------------------------------------------*/
     26          /* Private macro -------------------------------------------------------------*/
     27          /* Private variables ---------------------------------------------------------*/
     28          /* Private function prototypes -----------------------------------------------*/
     29          /* Private functions ---------------------------------------------------------*/
     30          /* Public functions ----------------------------------------------------------*/
     31          
     32          /** @addtogroup IWDG_Public_Functions
     33            * @{
     34            */
     35          
     36          /**
     37            * @brief  Enables or disables write access to Prescaler and Reload registers.
     38            * @param  IWDG_WriteAccess : New state of write access to Prescaler and Reload
     39            *         registers.  This parameter can be a value of @ref IWDG_WriteAccess_TypeDef.
     40            * @retval None
     41            */

   \                                 In section .far_func.text, align 1
     42          void IWDG_WriteAccessCmd(IWDG_WriteAccess_TypeDef IWDG_WriteAccess)
     43          {
   \                     IWDG_WriteAccessCmd:
   \   000000 3B0000                PUSH      S:?b8
   \   000003 B700                  LD        S:?b8, A
     44              /* Check the parameters */
     45              assert_param(IS_IWDG_WRITEACCESS_MODE_OK(IWDG_WriteAccess));
   \   000005 B600                  LD        A, S:?b8
   \   000007 A155                  CP        A, #0x55
   \   000009 2713                  JREQ      L:??IWDG_WriteAccessCmd_0
   \   00000B 3D00                  TNZ       S:?b8
   \   00000D 270F                  JREQ      L:??IWDG_WriteAccessCmd_0
   \   00000F AE002D                LDW       X, #0x2d
   \   000012 BF00                  LDW       S:?w1, X
   \   000014 5F                    CLRW      X
   \   000015 BF00                  LDW       S:?w0, X
   \   000017 AE0000                LDW       X, #`?<Constant "D:\\\\Project\\\\STM8S_StdP...">`
   \   00001A 8D000000              CALLF     assert_failed
     46          
     47              IWDG->KR = (uint8_t)IWDG_WriteAccess; /* Write Access */
   \                     ??IWDG_WriteAccessCmd_0:
   \   00001E B600                  LD        A, S:?b8
   \   000020 C750E0                LD        L:0x50e0, A
     48          }
   \   000023 320000                POP       S:?b8
   \   000026 87                    RETF
     49          
     50          /**
     51            * @brief  Sets IWDG Prescaler value.
     52            * @note   Write access should be enabled
     53            * @param  IWDG_Prescaler : Specifies the IWDG Prescaler value.
     54            *         This parameter can be a value of @ref IWDG_Prescaler_TypeDef.
     55            * @retval None
     56            */

   \                                 In section .far_func.text, align 1
     57          void IWDG_SetPrescaler(IWDG_Prescaler_TypeDef IWDG_Prescaler)
     58          {
   \                     IWDG_SetPrescaler:
   \   000000 3B0000                PUSH      S:?b8
   \   000003 B700                  LD        S:?b8, A
     59              /* Check the parameters */
     60              assert_param(IS_IWDG_PRESCALER_OK(IWDG_Prescaler));
   \   000005 3D00                  TNZ       S:?b8
   \   000007 2733                  JREQ      L:??IWDG_SetPrescaler_0
   \   000009 B600                  LD        A, S:?b8
   \   00000B A101                  CP        A, #0x1
   \   00000D 272D                  JREQ      L:??IWDG_SetPrescaler_0
   \   00000F B600                  LD        A, S:?b8
   \   000011 A102                  CP        A, #0x2
   \   000013 2727                  JREQ      L:??IWDG_SetPrescaler_0
   \   000015 B600                  LD        A, S:?b8
   \   000017 A103                  CP        A, #0x3
   \   000019 2721                  JREQ      L:??IWDG_SetPrescaler_0
   \   00001B B600                  LD        A, S:?b8
   \   00001D A104                  CP        A, #0x4
   \   00001F 271B                  JREQ      L:??IWDG_SetPrescaler_0
   \   000021 B600                  LD        A, S:?b8
   \   000023 A105                  CP        A, #0x5
   \   000025 2715                  JREQ      L:??IWDG_SetPrescaler_0
   \   000027 B600                  LD        A, S:?b8
   \   000029 A106                  CP        A, #0x6
   \   00002B 270F                  JREQ      L:??IWDG_SetPrescaler_0
   \   00002D AE003C                LDW       X, #0x3c
   \   000030 BF00                  LDW       S:?w1, X
   \   000032 5F                    CLRW      X
   \   000033 BF00                  LDW       S:?w0, X
   \   000035 AE0000                LDW       X, #`?<Constant "D:\\\\Project\\\\STM8S_StdP...">`
   \   000038 8D000000              CALLF     assert_failed
     61          
     62              IWDG->PR = (uint8_t)IWDG_Prescaler;
   \                     ??IWDG_SetPrescaler_0:
   \   00003C B600                  LD        A, S:?b8
   \   00003E C750E1                LD        L:0x50e1, A
     63          }
   \   000041 320000                POP       S:?b8
   \   000044 87                    RETF
     64          
     65          /**
     66            * @brief  Sets IWDG Reload value.
     67            * @note   Write access should be enabled
     68            * @param  IWDG_Reload : Reload register value.
     69            *         This parameter must be a number between 0 and 0xFF.
     70            * @retval None
     71            */

   \                                 In section .far_func.text, align 1
     72          void IWDG_SetReload(uint8_t IWDG_Reload)
     73          {
     74              IWDG->RLR = IWDG_Reload;
   \                     IWDG_SetReload:
   \   000000 C750E2                LD        L:0x50e2, A
     75          }
   \   000003 87                    RETF
     76          
     77          /**
     78            * @brief  Reloads IWDG counter
     79            * @note   Write access should be enabled
     80            * @param  None
     81            * @retval None
     82            */

   \                                 In section .far_func.text, align 1
     83          void IWDG_ReloadCounter(void)
     84          {
     85              IWDG->KR = IWDG_KEY_REFRESH;
   \                     IWDG_ReloadCounter:
   \   000000 35AA50E0              MOV       L:0x50e0, #0xaa
     86          }
   \   000004 87                    RETF
     87          
     88          /**
     89            * @brief  Enables IWDG.
     90            * @param  None
     91            * @retval None
     92            */

   \                                 In section .far_func.text, align 1
     93          void IWDG_Enable(void)
     94          {
     95              IWDG->KR = IWDG_KEY_ENABLE;
   \                     IWDG_Enable:
   \   000000 35CC50E0              MOV       L:0x50e0, #0xcc
     96          }
   \   000004 87                    RETF

   \                                 In section .near.rodata, align 1
   \                     `?<Constant "D:\\\\Project\\\\STM8S_StdP...">`:
   \   000000 443A5C50726F          DC8 44H, 3AH, 5CH, 50H, 72H, 6FH, 6AH, 65H
   \   000008 63745C53544D          DC8 63H, 74H, 5CH, 53H, 54H, 4DH, 38H, 53H
   \   000010 5F5374645065          DC8 5FH, 53H, 74H, 64H, 50H, 65H, 72H, 69H
   \   000018 70685F4C6962          DC8 70H, 68H, 5FH, 4CH, 69H, 62H, 5FH, 56H
   \   000020 322E312E305C          DC8 32H, 2EH, 31H, 2EH, 30H, 5CH, 4CH, 69H
   \   000028 627261726965          DC8 62H, 72H, 61H, 72H, 69H, 65H, 73H, 5CH
   \   000030 53544D38535F          DC8 53H, 54H, 4DH, 38H, 53H, 5FH, 53H, 74H
   \   000038 645065726970          DC8 64H, 50H, 65H, 72H, 69H, 70H, 68H, 5FH
   \   000040 447269766572          DC8 44H, 72H, 69H, 76H, 65H, 72H, 5CH, 73H
   \   000048 72635C73746D          DC8 72H, 63H, 5CH, 73H, 74H, 6DH, 38H, 73H
   \   000050 5F697764672E          DC8 5FH, 69H, 77H, 64H, 67H, 2EH, 63H, 0
     97          
     98          /**
     99            * @}
    100            */
    101            
    102          /**
    103            * @}
    104            */
    105            
    106          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Section sizes:

     Function/Label                           Bytes
     --------------                           -----
     IWDG_WriteAccessCmd                        39
     IWDG_SetPrescaler                          69
     IWDG_SetReload                              4
     IWDG_ReloadCounter                          5
     IWDG_Enable                                 5
     ?<Constant "D:\\Project\\STM8S_StdP...">   88

 
 122 bytes in section .far_func.text
  88 bytes in section .near.rodata
 
 122 bytes of CODE  memory
  88 bytes of CONST memory

Errors: none
Warnings: none
